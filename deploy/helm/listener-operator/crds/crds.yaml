---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: listenerclasses.listeners.stackable.tech
  annotations:
    helm.sh/resource-policy: keep
spec:
  group: listeners.stackable.tech
  names:
    categories: []
    kind: ListenerClass
    plural: listenerclasses
    shortNames: []
    singular: listenerclass
  scope: Cluster
  versions:
    - additionalPrinterColumns: []
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Auto-generated derived type for ListenerClassSpec via `CustomResource`
          properties:
            spec:
              description: Defines a policy for how [Listeners](https://docs.stackable.tech/home/nightly/listener-operator/listener) should be exposed. Read the [ListenerClass documentation](https://docs.stackable.tech/home/nightly/listener-operator/listenerclass) for more information.
              properties:
                serviceAnnotations:
                  additionalProperties:
                    type: string
                  default: {}
                  description: Annotations that should be added to the Service object.
                  type: object
                serviceType:
                  description: The method used to access the services.
                  enum:
                    - NodePort
                    - LoadBalancer
                    - ClusterIP
                  type: string
              required:
                - serviceType
              type: object
          required:
            - spec
          title: ListenerClass
          type: object
      served: true
      storage: true
      subresources: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: listeners.listeners.stackable.tech
  annotations:
    helm.sh/resource-policy: keep
spec:
  group: listeners.stackable.tech
  names:
    categories: []
    kind: Listener
    plural: listeners
    shortNames: []
    singular: listener
  scope: Namespaced
  versions:
    - additionalPrinterColumns: []
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Auto-generated derived type for ListenerSpec via `CustomResource`
          properties:
            spec:
              description: |-
                Exposes a set of pods to the outside world.

                Essentially a Stackable extension of a Kubernetes Service. Compared to Service, Listener changes three things: 1. It uses a cluster-level policy object (ListenerClass) to define how exactly the exposure works 2. It has a consistent API for reading back the exposed address(es) of the service 3. The Pod must mount a Volume referring to the Listener, which also allows us to control stickiness.

                Learn more in the [Listener documentation](https://docs.stackable.tech/home/nightly/listener-operator/listener).
              properties:
                className:
                  description: The name of the [ListenerClass](https://docs.stackable.tech/home/nightly/listener-operator/listenerclass).
                  nullable: true
                  type: string
                extraPodSelectorLabels:
                  additionalProperties:
                    type: string
                  default: {}
                  description: Extra labels that the Pods must match in order to be exposed. They must _also_ still have a Volume referring to the Listener.
                  type: object
                ports:
                  description: Ports that should be exposed.
                  items:
                    properties:
                      name:
                        description: |-
                          The name of the port.

                          The name of each port *must* be unique within a single Listener.
                        type: string
                      port:
                        description: The port number.
                        format: int32
                        type: integer
                      protocol:
                        description: The layer-4 protocol (`TCP` or `UDP`).
                        nullable: true
                        type: string
                    required:
                      - name
                      - port
                    type: object
                  nullable: true
                  type: array
                publishNotReadyAddresses:
                  default: true
                  description: Whether incoming traffic should also be directed to Pods that are not `Ready`.
                  nullable: true
                  type: boolean
              type: object
            status:
              description: Informs users about how to reach the [`Listener`].
              nullable: true
              properties:
                ingressAddresses:
                  description: All addresses that the Listener is currently reachable from.
                  items:
                    description: One address that a Listener is accessible from.
                    properties:
                      address:
                        description: The hostname or IP address to the Listener.
                        type: string
                      addressType:
                        description: The type of address (`Hostname` or `IP`).
                        enum:
                          - Hostname
                          - IP
                        type: string
                      ports:
                        additionalProperties:
                          format: int32
                          type: integer
                        description: Port mapping table.
                        type: object
                    required:
                      - address
                      - addressType
                      - ports
                    type: object
                  nullable: true
                  type: array
                nodePorts:
                  additionalProperties:
                    format: int32
                    type: integer
                  description: |-
                    Port mappings for accessing the Listener on each Node that the Pods are currently running on.

                    This is only intended for internal use by listener-operator itself. This will be left unset if using a ListenerClass that does not require Node-local access.
                  nullable: true
                  type: object
                serviceName:
                  description: The backing Kubernetes Service.
                  nullable: true
                  type: string
              type: object
          required:
            - spec
          title: Listener
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: podlisteners.listeners.stackable.tech
  annotations:
    helm.sh/resource-policy: keep
spec:
  group: listeners.stackable.tech
  names:
    categories: []
    kind: PodListeners
    plural: podlisteners
    shortNames: []
    singular: podlisteners
  scope: Namespaced
  versions:
    - additionalPrinterColumns: []
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Auto-generated derived type for PodListenersSpec via `CustomResource`
          properties:
            spec:
              description: |-
                Informs users about [`Listener`]s that are bound by a given [`Pod`].

                This is not expected to be created or modified by users. It will be created by the Stackable Listener Operator when mounting the listener volume, and is always named `pod-{pod.metadata.uid}`.
              properties:
                listeners:
                  additionalProperties:
                    properties:
                      ingressAddresses:
                        description: |-
                          Addresses allowing access to this Pod.

                          Compared to `ingress_addresses` on the Listener status, this list is restricted to addresses that can access this Pod.

                          This field is intended to be equivalent to the files mounted into the Listener volume.
                        items:
                          description: One address that a Listener is accessible from.
                          properties:
                            address:
                              description: The hostname or IP address to the Listener.
                              type: string
                            addressType:
                              description: The type of address (`Hostname` or `IP`).
                              enum:
                                - Hostname
                                - IP
                              type: string
                            ports:
                              additionalProperties:
                                format: int32
                                type: integer
                              description: Port mapping table.
                              type: object
                          required:
                            - address
                            - addressType
                            - ports
                          type: object
                        nullable: true
                        type: array
                      scope:
                        description: '`Node` if this address only allows access to Pods hosted on a specific Kubernetes Node, otherwise `Cluster`.'
                        enum:
                          - Node
                          - Cluster
                        type: string
                    required:
                      - scope
                    type: object
                  description: |-
                    All listeners currently bound by the Pod.

                    Indexed by Volume name (not PersistentVolume or PersistentVolumeClaim).
                  type: object
              required:
                - listeners
              type: object
          required:
            - spec
          title: PodListeners
          type: object
      served: true
      storage: true
      subresources: {}
